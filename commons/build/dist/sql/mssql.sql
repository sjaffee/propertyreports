SET ANSI_NULL_DFLT_ON ON;

CREATE TABLE PERMISSION_DB_BEAN (ID INTEGER NOT NULL IDENTITY PRIMARY KEY, ACCESS_TYPE VARCHAR(255), CLASS_TYPE VARCHAR(255));

CREATE TABLE ROLE_DB_BEAN (ID INTEGER NOT NULL IDENTITY (3, 1) PRIMARY KEY, ROLE_NAME VARCHAR(255), TENANT_ID INTEGER NOT NULL);
CREATE INDEX I_ROLE_NAME ON ROLE_DB_BEAN (ROLE_NAME, TENANT_ID);

CREATE TABLE ROLE_PERMISSION_MAP (ROLE_ID INTEGER NOT NULL, PERMISSION_ID INTEGER NOT NULL);
CREATE INDEX I_ROLE_PERMISSION ON ROLE_PERMISSION_MAP (ROLE_ID, PERMISSION_ID);

CREATE TABLE USER_DB_BEAN (ID INTEGER NOT NULL IDENTITY (2, 1) PRIMARY KEY, TENANT_ID INTEGER NOT NULL, PASSWORD VARBINARY(255), USER_NAME VARCHAR(255), PASSWORD_HIST1 VARBINARY(255), PASSWORD_HIST2 VARBINARY(255), PASSWORD_HIST3 VARBINARY(255), PASSWORD_HIST4 VARBINARY(255), PASSWORD_HIST5 VARBINARY(255), PASSWORD_HIST6 VARBINARY(255), PASSWORD_HIST7 VARBINARY(255), FORCE_RESET INTEGER, PASSWORD_SET_DATE DATETIME, LOGIN_ATTEMPTS INTEGER, UNLOCK_DATE DATETIME);
CREATE INDEX I_USER_NAME ON USER_DB_BEAN (USER_NAME);

CREATE TABLE USER_ROLE_MAP (USER_ID INTEGER NOT NULL, ROLE_ID INTEGER NOT NULL);
CREATE INDEX I_USER_ROLE ON USER_ROLE_MAP (USER_ID, ROLE_ID);

CREATE TABLE OBJECT_LOCK_BEAN (ID INTEGER NOT NULL, TENANT_ID INTEGER NOT NULL, CLASS_NAME VARCHAR(255) NOT NULL, LOCK_TIME DATETIME, USER_NAME VARCHAR(255), APPLICATION_NAME VARCHAR(255), HOST_NAME VARCHAR(255), PRIMARY KEY(ID, CLASS_NAME));

CREATE TABLE SYSTEM_PROPERTY (PROPERTY_NAME VARCHAR(255) NOT NULL, PROPERTY_VALUE VARCHAR(255), TENANT_ID INTEGER NOT NULL, PRIMARY KEY(PROPERTY_NAME, TENANT_ID));

CREATE TABLE RESOURCE_ROLE_MAP (ROLE_ID INTEGER NOT NULL, RESOURCE_KEY VARCHAR(255) NOT NULL, TENANT_ID INTEGER NOT NULL);
CREATE INDEX I_RESOURCE_ROLE ON RESOURCE_ROLE_MAP (RESOURCE_KEY, TENANT_ID);

CREATE TABLE TENANT (ID INTEGER NOT NULL IDENTITY (2, 1) PRIMARY KEY, NAME VARCHAR(255) NOT NULL, DESCRIPTION VARCHAR(255), IS_DEFAULT INTEGER DEFAULT 0 NOT NULL CHECK (IS_DEFAULT IN (0, 1)));
CREATE INDEX I_TENANT_NAME ON TENANT (NAME);

SET IDENTITY_INSERT TENANT ON;
INSERT INTO TENANT (ID, NAME, DESCRIPTION, IS_DEFAULT) VALUES (1, 'System', 'Default System tenant', 1);
SET IDENTITY_INSERT TENANT OFF;

INSERT INTO SYSTEM_PROPERTY VALUES ('SECURITY_PASSWORD_EXPIRE_DAYS', '30', 1);
INSERT INTO SYSTEM_PROPERTY VALUES ('SECURITY_PASSWORD_HISTORY', '3', 1);
INSERT INTO SYSTEM_PROPERTY VALUES ('PASSWORD_UPPER_REQUIRED_PROPERTY', 'true', 1);
INSERT INTO SYSTEM_PROPERTY VALUES ('PASSWORD_LOWER_REQUIRED_PROPERTY', 'true', 1);
INSERT INTO SYSTEM_PROPERTY VALUES ('PASSWORD_NUMERIC_REQUIRED_PROPERTY', 'true', 1);
INSERT INTO SYSTEM_PROPERTY VALUES ('PASSWORD_SYMBOL_REQUIRED_PROPERTY', 'true', 1);
INSERT INTO SYSTEM_PROPERTY VALUES ('PASSWORD_REQUIRED_COUNT_PROPERTY', '3', 1);
INSERT INTO SYSTEM_PROPERTY VALUES ('PASSWORD_MINIMUM_LENGTH_PROPERTY', '7', 1);
INSERT INTO SYSTEM_PROPERTY VALUES ('PASSWORD_MAXIMUM_LENGTH_PROPERTY', '20', 1);
INSERT INTO SYSTEM_PROPERTY VALUES ('PASSWORD_MAXIMUM_LOGIN_ATTEMPTS_PROPERTY', '5', 1);
INSERT INTO SYSTEM_PROPERTY VALUES ('PASSWORD_LOCKOUT_MINUTES_PROPERTY', '15', 1);

SET IDENTITY_INSERT USER_DB_BEAN ON;
INSERT INTO USER_DB_BEAN (ID, USER_NAME, FORCE_RESET, TENANT_ID) VALUES (1, 'admin', 0, 1);
SET IDENTITY_INSERT USER_DB_BEAN OFF;

SET IDENTITY_INSERT PERMISSION_DB_BEAN ON;
INSERT INTO PERMISSION_DB_BEAN (ID, ACCESS_TYPE, CLASS_TYPE) VALUES (1, 'r', 'com.ali.commons.security.UserBean');
INSERT INTO PERMISSION_DB_BEAN (ID, ACCESS_TYPE, CLASS_TYPE) VALUES (2, 'w', 'com.ali.commons.security.UserBean');
INSERT INTO PERMISSION_DB_BEAN (ID, ACCESS_TYPE, CLASS_TYPE) VALUES (3, 'c', 'com.ali.commons.security.UserBean');
INSERT INTO PERMISSION_DB_BEAN (ID, ACCESS_TYPE, CLASS_TYPE) VALUES (4, 'd', 'com.ali.commons.security.UserBean');
INSERT INTO PERMISSION_DB_BEAN (ID, ACCESS_TYPE, CLASS_TYPE) VALUES (5, 'r', 'com.ali.commons.security.RoleBean');
INSERT INTO PERMISSION_DB_BEAN (ID, ACCESS_TYPE, CLASS_TYPE) VALUES (6, 'w', 'com.ali.commons.security.RoleBean');
INSERT INTO PERMISSION_DB_BEAN (ID, ACCESS_TYPE, CLASS_TYPE) VALUES (7, 'c', 'com.ali.commons.security.RoleBean');
INSERT INTO PERMISSION_DB_BEAN (ID, ACCESS_TYPE, CLASS_TYPE) VALUES (8, 'd', 'com.ali.commons.security.RoleBean');
INSERT INTO PERMISSION_DB_BEAN (ID, ACCESS_TYPE, CLASS_TYPE) VALUES (9, 'r', 'com.ali.commons.security.RootSecurityManager');
INSERT INTO PERMISSION_DB_BEAN (ID, ACCESS_TYPE, CLASS_TYPE) VALUES (10, 'w', 'com.ali.commons.security.RootSecurityManager');
INSERT INTO PERMISSION_DB_BEAN (ID, ACCESS_TYPE, CLASS_TYPE) VALUES (11, 'r', 'com.ali.commons.security.ResourceRoleBean');
INSERT INTO PERMISSION_DB_BEAN (ID, ACCESS_TYPE, CLASS_TYPE) VALUES (12, 'w', 'com.ali.commons.security.ResourceRoleBean');
INSERT INTO PERMISSION_DB_BEAN (ID, ACCESS_TYPE, CLASS_TYPE) VALUES (13, 'r', 'com.ali.commons.security.TenantBean');
INSERT INTO PERMISSION_DB_BEAN (ID, ACCESS_TYPE, CLASS_TYPE) VALUES (14, 'w', 'com.ali.commons.security.TenantBean');
INSERT INTO PERMISSION_DB_BEAN (ID, ACCESS_TYPE, CLASS_TYPE) VALUES (15, 'c', 'com.ali.commons.security.TenantBean');
INSERT INTO PERMISSION_DB_BEAN (ID, ACCESS_TYPE, CLASS_TYPE) VALUES (16, 'd', 'com.ali.commons.security.TenantBean');
SET IDENTITY_INSERT PERMISSION_DB_BEAN OFF;

SET IDENTITY_INSERT ROLE_DB_BEAN ON;
INSERT INTO ROLE_DB_BEAN (ID, ROLE_NAME, TENANT_ID) VALUES (1, 'Administrator', 1);
INSERT INTO ROLE_DB_BEAN (ID, ROLE_NAME, TENANT_ID) VALUES (2, 'View Only', 1);
INSERT INTO ROLE_DB_BEAN (ID, ROLE_NAME, TENANT_ID) VALUES (3, 'User Administrator', 1);
SET IDENTITY_INSERT ROLE_DB_BEAN OFF;

INSERT INTO USER_ROLE_MAP VALUES (1, 1);
INSERT INTO USER_ROLE_MAP VALUES (1, 2);

INSERT INTO ROLE_PERMISSION_MAP VALUES (1, 1);
INSERT INTO ROLE_PERMISSION_MAP VALUES (1, 2);
INSERT INTO ROLE_PERMISSION_MAP VALUES (1, 3);
INSERT INTO ROLE_PERMISSION_MAP VALUES (1, 4);
INSERT INTO ROLE_PERMISSION_MAP VALUES (1, 5);
INSERT INTO ROLE_PERMISSION_MAP VALUES (1, 6);
INSERT INTO ROLE_PERMISSION_MAP VALUES (1, 7);
INSERT INTO ROLE_PERMISSION_MAP VALUES (1, 8);
INSERT INTO ROLE_PERMISSION_MAP VALUES (1, 9);
INSERT INTO ROLE_PERMISSION_MAP VALUES (1, 10);
INSERT INTO ROLE_PERMISSION_MAP VALUES (1, 11);
INSERT INTO ROLE_PERMISSION_MAP VALUES (1, 12);


INSERT INTO ROLE_PERMISSION_MAP VALUES (2, 1);
INSERT INTO ROLE_PERMISSION_MAP VALUES (2, 5);
INSERT INTO ROLE_PERMISSION_MAP VALUES (2, 9);
INSERT INTO ROLE_PERMISSION_MAP VALUES (2, 11);

INSERT INTO ROLE_PERMISSION_MAP VALUES (3, 1);
INSERT INTO ROLE_PERMISSION_MAP VALUES (3, 2);
INSERT INTO ROLE_PERMISSION_MAP VALUES (3, 3);
INSERT INTO ROLE_PERMISSION_MAP VALUES (3, 4);
INSERT INTO ROLE_PERMISSION_MAP VALUES (3, 5);
INSERT INTO ROLE_PERMISSION_MAP VALUES (3, 6);
INSERT INTO ROLE_PERMISSION_MAP VALUES (3, 7);
INSERT INTO ROLE_PERMISSION_MAP VALUES (3, 8);
INSERT INTO ROLE_PERMISSION_MAP VALUES (3, 9);
INSERT INTO ROLE_PERMISSION_MAP VALUES (3, 10);
INSERT INTO ROLE_PERMISSION_MAP VALUES (3, 11);
INSERT INTO ROLE_PERMISSION_MAP VALUES (3, 12);

CREATE TABLE CONFIGURED_ITEM (IDX INTEGER NOT NULL IDENTITY PRIMARY KEY, TENANT_ID INTEGER NOT NULL, UUID_MSB BIGINT NOT NULL, UUID_LSB BIGINT NOT NULL, ITEM_NAME NVARCHAR(255), TYPE_NAME NVARCHAR(255), XML NTEXT);
CREATE INDEX I_CONFIGURED_ITEM_UUID ON CONFIGURED_ITEM (UUID_MSB, UUID_LSB, TENANT_ID);
CREATE INDEX I_CONFIGURED_ITEM_NAME ON CONFIGURED_ITEM (ITEM_NAME, TENANT_ID);
CREATE INDEX I_CONFIGURED_ITEM_TYPE ON CONFIGURED_ITEM (TYPE_NAME, TENANT_ID);

ALTER TABLE USER_DB_BEAN ADD user_admin INTEGER DEFAULT 0 NOT NULL;
INSERT INTO USER_DB_BEAN (USER_NAME,FORCE_RESET, TENANT_ID,USER_ADMIN) VALUES ('useradmin', 0, 1,1);
INSERT INTO USER_ROLE_MAP(USER_ID,ROLE_ID) VALUES (IDENT_CURRENT('USER_DB_BEAN'), 3);

ALTER TABLE USER_DB_BEAN ADD LAST_LOGIN_DATE DATETIME DEFAULT GETDATE() NOT NULL;

-- insert the new useradmin view only role
SET IDENTITY_INSERT ROLE_DB_BEAN ON;
INSERT INTO ROLE_DB_BEAN (ID, ROLE_NAME, TENANT_ID) VALUES (IDENT_CURRENT('ROLE_DB_BEAN')+1, 'User Administrator View Only', 1);
SET IDENTITY_INSERT ROLE_DB_BEAN OFF;


-- insert the new useradmin view only role permissions
INSERT INTO ROLE_PERMISSION_MAP (ROLE_ID, PERMISSION_ID)
SELECT IDENT_CURRENT('ROLE_DB_BEAN'), PERMISSION_ID FROM ROLE_PERMISSION_MAP WHERE ROLE_ID=2;

CREATE TABLE NOBLE_LCH (ID INTEGER NOT NULL IDENTITY (1, 1) PRIMARY KEY, CREATE_DATE DATETIME NOT NULL, COUNT VARBINARY(255) NOT NULL, DATE VARBINARY(255) NOT NULL, HOUR VARBINARY(255) NOT NULL);

CREATE TABLE NOBLE_L (ID INTEGER NOT NULL IDENTITY (1, 1) PRIMARY KEY, LCOUNT VARBINARY(255) NOT NULL, EXPIRY_DATE VARBINARY(255) NOT NULL, LASTCHECKED VARBINARY(255),  WARN_PCNT_USED VARBINARY(255) NOT NULL, WARN_DAYS_PRIOR_EXPY VARBINARY(255) NOT NULL, DAYS_WARN_MCU VARBINARY(255) NOT NULL, USER_COUNT VARBINARY(255), USER_DATE VARBINARY(255), USER_HOUR VARBINARY(255), IS_EXPIRED  VARBINARY(255), IS_EXCEEDED VARBINARY(255), EXCEEDED_DATE VARBINARY(255));
